#/*
 * pwm.c
 *
 * Created: 2015-07-05 5:39:37 PM
 *  Author: David
 */ 

#include <avr/io.h>
#include <avr/interrupt.h>
#include <avr/io.h>
#define F_CPU 14745600UL
#include <util/delay.h>

void _pwm_init(void);
void _pwm_fwd(int speed);
void _pwm_brake(void);
void _pwm_rvs(int speed);
void _pwm_left(int speed);
void _pwm_right(int speed);

#define _FAST 200
#define _NORMAL 128
#define _SLOW 64

int main(void)
{
	_pwm_init();
	_delay_ms(1000);
	_pwm_fwd(180);
	while(1);
}

void _pwm_init(void)
{
	PORTB = 0xFF;															//initialized PORTB all zeros
	DDRB |=_BV(PB3)|_BV(PB4);
	DDRB |=_BV(PB1)|_BV(PB2);												//set output pins 
	OCR0A = 128;															//set duty cycle
	OCR0B = 128;
	TCCR0A |= _BV(COM0A1)|_BV(COM0A0)| _BV(WGM00) |_BV(COM0B1)|_BV(COM0B0);	//phase correct pwm; inverting
    	TCCR0B = 1<<CS01;														//pre-scaler of 8												// 
}

void _pwm_fwd(int speed)
{
	OCR0A = speed;															//set duty cycle
	OCR0B = speed;
	PORTB |=(_BV(PB2));
	PORTB |=(_BV(PB1));
}

void _pwm_rvs(int speed)
{
	OCR0A = speed;															//set duty cycle
	OCR0B = speed;
	PORTB &= ~(1<<PB2);
	PORTB &= ~(1<<PB1);
}

void _pwm_brake(void)
{
	OCR0A = 0;															//set duty cycle
	OCR0B = 0;
	PORTB |=(1<<PB2);
	PORTB |=(1<<PB1);
}

void _pwm_left(int speed)
{
	OCR0A = 0;
	OCR0B = speed;
	PORTB |= (1<<PB2);
	PORTB |= (1<<PB1);
}

void _pwm_right(int speed)
{
	OCR0B = 0;
	OCR0A  = speed;
	PORTB |= (1<<PB2);
	PORTB |= (1<<PB1);
}
